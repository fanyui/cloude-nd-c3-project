version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  hello-world:
    docker: 
      - image: circleci/node:4.8.2 # the primary container, where your job's commands are run
    steps:
      - checkout # check out the code in the project directory
      - run: echo "Hello World" # run the `echo` command

  checkout-code:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm install
  build-compile-fend:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd frontend && npm install
            - run: cd frontend && npm run build
  build-compile-bend:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd backend && npm install
            - run: cd backend && npm run build
  compile-test-bend:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd backend && npm install
            - run: cd backend && npm test
  compile-test-fend:
    executor:
      name: node/default
    environment: 
      NODE_OPTIONS=--max_old_space_size=8192
    steps:
      - checkout
      - run: cd frontend && npm install
      - run: cd frontend && npm test
  check-vulnerability:
    executor:
      name: node/default
    environment: 
      NODE_OPTIONS=--max_old_space_size=8192
    steps:
      - checkout
      - run: cd backend && npm audit --audit-level=critical
      - run: cd frontend && npm audit --audit-level=critical
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name superpowers

  get_instance_ip:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Get the instance ip address for backend 
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text >> inventory
      - run:
          name: store the backend ip address to memstash so that frontend can use it. 
          command: ./bkmemstash.sh    
  setup_workspace:
    working_directory: ~/project
    docker:
      - image: circleci/node:8.2.1
    steps:
      - checkout
      - run:
          name: store the backend ip address to memstash so that frontend can use it. 
          command: ./extract_ip_address.sh  

      - persist_to_workspace:
          root: ~/project
          paths:
            - .   

  configure_infrastructure:
    working_directory: ~/project
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - attach_workspace:
          at: ~/project      
      - add_ssh_keys:
          fingerprints: ["70:7f:5c:d9:8b:88:6b:b8:e8:68:90:74:cd:a5:a7:70"] # You can get this ID in the section where you registered the SSH Key    
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible && apk add openssh-client # install the dependencies needed for your playbook
      - run:
          name: Install openssh
          command: |
             apk add openssh-client # install the dependencies needed for your playbook ssh

      - run:
          name: Configure server
          command: |
            cd ~/project/.circleci/ansible/ 
            ansible-playbook   -i inventory.txt  main.yml

  run_db_migrations:
    working_directory: ~/project
    executor:
      name: node/default
    steps:
      - attach_workspace:
          at: ~/project    

      - node/with-cache:
          steps:
            - run: cd ~/project/backend && npm install
            - run: cd ~/project/backend && npm run migrations

  build_copy_bend_files:
    working_directory: ~/project
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - attach_workspace:
          at: ~/project    

      - run:
          name: Install npm
          command: |
            apk add --update npm
      - run: cd ~/project/backend && npm install
      - run: cd ~/project/backend && npm run build
      - add_ssh_keys:
          fingerprints: ["70:7f:5c:d9:8b:88:6b:b8:e8:68:90:74:cd:a5:a7:70"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Install openssh
          command: |
             apk add openssh-client # install the dependencies needed for your playbook ssh

      - run:
          name: Copy files to server
          command: |
            cd ~/project/.circleci/ansible/ 
            ansible-playbook   -i inventory.txt  copy_backend_playbook.yml

workflows:
    hello-world:
      jobs:
        - hello-world
    build-compile-test:
      jobs:
        - checkout-code
        - build-compile-fend:
            requires:
              - checkout-code    
        - build-compile-bend:
            requires:
              - checkout-code
        - compile-test-fend:
            requires:
              - build-compile-fend
        - compile-test-bend:
            requires:
              - build-compile-bend
        - check-vulnerability:
            requires:
              - compile-test-bend
              - compile-test-fend
        - create_infrastructure:
            requires:
              - check-vulnerability
        - get_instance_ip:
            requires:
              - create_infrastructure
        - setup_workspace:
            requires:
              - get_instance_ip
        - configure_infrastructure:
            requires:
              - setup_workspace
        - run_db_migrations:
            requires:
              - configure_infrastructure
        - build_copy_bend_files:
            requires:
              - run_db_migrations