version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  hello-world:
    docker: 
      - image: circleci/node:4.8.2 # the primary container, where your job's commands are run
    steps:
      - checkout # check out the code in the project directory
      - run: echo "Hello World" # run the `echo` command


  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name superpowers

  configure_infrastructure:
    docker:
      - image: amazon/aws-cli
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["0a:a4:a9:0e:d2:bc:1c:64:b5:f7:01:2c:db:8a:10:09"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Get the instance ip address for backend 
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text >> inventory.txt 
      - run:
          name: store the backend ip address to memstash so that frontend can use it. 
          command: ./bkmemstash.sh    
      - run:
          name: Install dependencies
          command: |
            apt add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook playbook.yml -i inventory.txt # add ip address of the ec2 to the inventory file. and configure it using ansible

  run_db_migrations:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd backend && npm run migrations

  build_copy_bend_files:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: cd backend && npm install
            - run: cd backend && npm run build
      - add_ssh_keys:
          fingerprints: ["0a:a4:a9:0e:d2:bc:1c:64:b5:f7:01:2c:db:8a:10:09"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook copy_backend_playbook.yml -i inventory.txt # add ip address of the ec2 to the inventory file. and configure it using ansible
 
workflows:
    hello-world:
      jobs:
        - hello-world

        - create_infrastructure

        - configure_infrastructure:
            requires:
              - create_infrastructure

        - run_db_migrations:
            requires:
              - configure_infrastructure
        - build_copy_bend_files:
            requires:
              - run_db_migrations